"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_2 = require("@testing-library/react");
const tooltip_1 = require("./tooltip");
const tooltip_composition_1 = require("./tooltip.composition");
it('should render with the correct text', () => {
    const { getByText } = (0, react_2.render)(react_1.default.createElement(tooltip_composition_1.BasicTooltip, null));
    const rendered = getByText('hello from Tooltip');
    expect(rendered).toBeTruthy();
});
it('should be visible', () => {
    const { getByText } = (0, react_2.render)(react_1.default.createElement(tooltip_composition_1.BasicTooltip, null));
    const rendered = getByText('hello from Tooltip');
    expect(rendered).toBeVisible();
});
it('should be hidable', () => {
    const { getByText } = (0, react_2.render)(react_1.default.createElement(tooltip_1.Tooltip, { text: "tip test", hidden: true, aria: '' }));
    const rendered = getByText('tip test');
    expect(rendered).not.toBeVisible();
});
it('should have a role of tooltip', () => {
    const { getByText } = (0, react_2.render)(react_1.default.createElement(tooltip_composition_1.BasicTooltip, null));
    const rendered = getByText('hello from Tooltip');
    expect(rendered).toHaveAttribute("role", "tooltip");
});
it('should be associatable with other elements for WCAG compliance', () => {
    const { getByText } = (0, react_2.render)(react_1.default.createElement("div", null,
        react_1.default.createElement(tooltip_1.Tooltip, { text: "tip test", hidden: true, aria: "subject" }),
        react_1.default.createElement("div", { id: "subject" })));
    const rendered = getByText('tip test');
    expect(rendered).toHaveAttribute("aria-describedby", "subject");
});
//# sourceMappingURL=tooltip.spec.js.map